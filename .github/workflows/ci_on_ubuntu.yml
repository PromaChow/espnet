name: ci on ubuntu
on:
  push:
    branches:
      - main

jobs:
  check_kaldi_symlinks:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@master
      - run: ci/check_kaldi_symlinks.sh
      - id: measurement-3
        name: Record Measurement After Step
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Step
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  process_labels:
    outputs:
      is_docker: ${{ steps.step1.outputs.is_docker }}
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - id: pr-labels
        name: Get PR labels
        uses: joerick/pr-labels-action@v1.0.9
      - id: step1
        name: Check whether PR is related to only docker
        run: "if [ -z \"$GITHUB_PR_LABEL_ESPNET1\" ] && [ -z \"$GITHUB_PR_LABEL_ESPNET2\"\
          \ ] && [ -n \"$GITHUB_PR_LABEL_DOCKER\" ]; then\n  echo \"is_docker=true\"\
          \ >> \"$GITHUB_OUTPUT\"\nelse\n  echo \"is_docker=false\" >> \"$GITHUB_OUTPUT\"\
          \nfi\n"
      - id: measurement-3
        name: Record Measurement After Check whether PR is related to only docker
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Check whether PR is related to only docker
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  test_configuration_espnet2:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@master
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.pytorch-version
            }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/Makefile') }}
          path: ~/.cache/pip
      - uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: 'sudo apt-get update -qq

          # NOTE(kamo): g++-7 doesn''t exist in ubuntu-latest

          sudo apt-get install -qq -y cmake libsndfile1-dev bc sox ffmpeg

          '
      - id: measurement-5
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - env:
          CHAINER_VERSION: ${{ matrix.chainer-version }}
          ESPNET_PYTHON_VERSION: ${{ matrix.python-version }}
          TH_VERSION: ${{ matrix.pytorch-version }}
          USE_CONDA: ${{ matrix.use-conda }}
        name: install espnet
        run: './ci/install.sh

          '
      - id: measurement-7
        name: Record Measurement After install espnet
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install espnet
          task: get-measurement
      - name: test configuration
        run: ./ci/test_configuration_espnet2.sh
      - id: measurement-9
        name: Record Measurement After test configuration
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test configuration
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_configuration_espnet2
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        chainer-version:
          - 6.0.0
        include:
          - chainer-verssion: 6.0.0
            os: ubuntu-latest
            python-version: '3.11'
            pytorch-version: 2.4.0
            use-conda: false
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
        pytorch-version:
          - 1.13.1
        use-conda:
          - false
      max-parallel: 20
  test_import:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: 'sudo apt-get install -qq -y libsndfile1-dev

          python3 -m pip install --upgrade pip setuptools wheel

          '
      - id: measurement-4
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - env:
          TH_VERSION: ${{ matrix.pytorch-version }}
        name: Install espnet with the least requirement
        run: 'python3 -m pip install -U numba

          ./tools/installers/install_torch.sh false ${TH_VERSION} CPU

          ./tools/installers/install_chainer.sh CPU

          python3 setup.py bdist_wheel

          python3 -m pip install dist/espnet-*.whl

          # log

          python3 -m pip freeze

          '
      - id: measurement-6
        name: Record Measurement After Install espnet with the least requirement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install espnet with the least requirement
          task: get-measurement
      - name: Import all modules (Try1)
        run: 'python3 ./ci/test_import_all.py

          '
      - id: measurement-8
        name: Record Measurement After Import all modules (Try1)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Import all modules (Try1)
          task: get-measurement
      - env:
          TH_VERSION: ${{ matrix.pytorch-version }}
        name: Install espnet with the full requirement
        run: 'python3 -m pip install "$(ls dist/espnet-*.whl)[all]"

          # log

          python3 -m pip freeze

          '
      - id: measurement-10
        name: Record Measurement After Install espnet with the full requirement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install espnet with the full requirement
          task: get-measurement
      - name: Import all modules (Try2)
        run: 'python3 -q -X faulthandler ./ci/test_import_all.py

          '
      - id: measurement-12
        name: Record Measurement After Import all modules (Try2)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Import all modules (Try2)
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
        pytorch-version:
          - 2.4.0
      max-parallel: 20
  unit_test_espnet1_and_integration_test_espnet1:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@master
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.pytorch-version
            }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/Makefile') }}
          path: ~/.cache/pip
      - uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: 'sudo apt-get update -qq

          # NOTE(kamo): g++-7 doesn''t exist in ubuntu-latest

          sudo apt-get install -qq -y cmake libsndfile1-dev bc sox ffmpeg

          '
      - id: measurement-5
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - env:
          CHAINER_VERSION: ${{ matrix.chainer-version }}
          ESPNET_PYTHON_VERSION: ${{ matrix.python-version }}
          TH_VERSION: ${{ matrix.pytorch-version }}
          USE_CONDA: ${{ matrix.use-conda }}
        name: install espnet
        run: './ci/install.sh

          '
      - id: measurement-7
        name: Record Measurement After install espnet
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install espnet
          task: get-measurement
      - name: test shell
        run: './ci/test_shell_espnet1.sh

          '
      - id: measurement-9
        name: Record Measurement After test shell
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test shell
          task: get-measurement
      - name: test python
        run: ./ci/test_python_espnet1.sh
      - id: measurement-11
        name: Record Measurement After test python
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test python
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_python_espnet1
      - continue-on-error: true
        name: coverage erase
        run: 'source tools/activate_python.sh

          coverage erase

          '
      - id: measurement-14
        name: Record Measurement After coverage erase
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: coverage erase
          task: get-measurement
      - name: install kaldi
        run: './ci/install_kaldi.sh

          '
      - id: measurement-16
        name: Record Measurement After install kaldi
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install kaldi
          task: get-measurement
      - name: test integration
        run: ./ci/test_integration_espnet1.sh
      - id: measurement-18
        name: Record Measurement After test integration
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test integration
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_integration_espnet1
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        chainer-version:
          - 6.0.0
        include:
          - chainer-verssion: 6.0.0
            os: ubuntu-latest
            python-version: '3.10'
            pytorch-version: 1.13.1
            use-conda: false
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
        pytorch-version:
          - 2.1.2
        use-conda:
          - false
      max-parallel: 20
  unit_test_espnet2_and_integration_test_espnet2:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@master
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.pytorch-version
            }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/Makefile') }}
          path: ~/.cache/pip
      - uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: 'sudo apt-get update -qq

          # NOTE(kamo): g++-7 doesn''t exist in ubuntu-latest

          sudo apt-get install -qq -y cmake libsndfile1-dev bc sox ffmpeg

          '
      - id: measurement-5
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - id: pr-labels
        name: Get PR labels
        uses: joerick/pr-labels-action@v1.0.9
      - env:
          CHAINER_VERSION: ${{ matrix.chainer-version }}
          ESPNET_PYTHON_VERSION: ${{ matrix.python-version }}
          TH_VERSION: ${{ matrix.pytorch-version }}
          USE_CONDA: ${{ matrix.use-conda }}
        name: install espnet
        run: './ci/install.sh

          '
      - id: measurement-8
        name: Record Measurement After install espnet
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install espnet
          task: get-measurement
      - name: test shell
        run: './ci/test_shell_espnet2.sh

          '
      - id: measurement-10
        name: Record Measurement After test shell
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test shell
          task: get-measurement
      - name: test python
        run: ./ci/test_python_espnet2.sh
      - id: measurement-12
        name: Record Measurement After test python
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test python
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_python_espnet2
      - continue-on-error: true
        name: coverage erase
        run: 'source tools/activate_python.sh

          coverage erase

          '
      - id: measurement-15
        name: Record Measurement After coverage erase
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: coverage erase
          task: get-measurement
      - name: install kaldi
        run: './ci/install_kaldi.sh

          '
      - id: measurement-17
        name: Record Measurement After install kaldi
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install kaldi
          task: get-measurement
      - name: test utils
        run: ./ci/test_utils.sh
      - id: measurement-19
        name: Record Measurement After test utils
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test utils
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_utils
      - continue-on-error: true
        name: coverage erase
        run: 'source tools/activate_python.sh

          coverage erase

          '
      - id: measurement-22
        name: Record Measurement After coverage erase
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: coverage erase
          task: get-measurement
      - name: test espnet2 integration
        run: ./ci/test_integration_espnet2.sh
      - id: measurement-24
        name: Record Measurement After test espnet2 integration
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test espnet2 integration
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_integration_espnet2
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        chainer-version:
          - 6.0.0
        include:
          - chainer-verssion: 6.0.0
            os: ubuntu-latest
            python-version: '3.10'
            pytorch-version: 1.13.1
            use-conda: false
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
          - '3.11'
        pytorch-version:
          - 2.0.1
          - 2.1.2
          - 2.2.2
          - 2.3.1
          - 2.4.0
        use-conda:
          - false
      max-parallel: 20
  unit_test_espnetez_and_integration_test_espnetez:
    if: 'github.event.pull_request.draft == false

      '
    needs: process_labels
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@master
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.pytorch-version
            }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/Makefile') }}
          path: ~/.cache/pip
      - uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: 'sudo apt-get update -qq

          # NOTE(kamo): g++-7 doesn''t exist in ubuntu-latest

          sudo apt-get install -qq -y cmake libsndfile1-dev bc sox ffmpeg

          '
      - id: measurement-5
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - id: pr-labels
        name: Get PR labels
        uses: joerick/pr-labels-action@v1.0.9
      - env:
          CHAINER_VERSION: ${{ matrix.chainer-version }}
          ESPNET_PYTHON_VERSION: ${{ matrix.python-version }}
          TH_VERSION: ${{ matrix.pytorch-version }}
          USE_CONDA: ${{ matrix.use-conda }}
        name: install espnet
        run: './ci/install.sh

          '
      - id: measurement-8
        name: Record Measurement After install espnet
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install espnet
          task: get-measurement
      - name: test python
        run: ./ci/test_python_espnetez.sh
      - id: measurement-10
        name: Record Measurement After test python
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test python
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_python_espnetez
      - continue-on-error: true
        name: coverage erase
        run: 'source tools/activate_python.sh

          coverage erase

          '
      - id: measurement-13
        name: Record Measurement After coverage erase
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: coverage erase
          task: get-measurement
      - name: install kaldi
        run: './ci/install_kaldi.sh

          '
      - id: measurement-15
        name: Record Measurement After install kaldi
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: install kaldi
          task: get-measurement
      - name: test utils
        run: ./ci/test_utils.sh
      - id: measurement-17
        name: Record Measurement After test utils
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test utils
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_utils
      - continue-on-error: true
        name: coverage erase
        run: 'source tools/activate_python.sh

          coverage erase

          '
      - id: measurement-20
        name: Record Measurement After coverage erase
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: coverage erase
          task: get-measurement
      - name: test espnetez integration
        run: ./ci/test_integration_espnetez.sh
      - id: measurement-22
        name: Record Measurement After test espnetez integration
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: test espnetez integration
          task: get-measurement
      - uses: codecov/codecov-action@v2
        with:
          flags: test_integration_espnetez
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        chainer-version:
          - 6.0.0
        include:
          - chainer-verssion: 6.0.0
            os: ubuntu-latest
            python-version: '3.10'
            pytorch-version: 1.13.1
            use-conda: false
        os:
          - ubuntu-latest
        python-version:
          - '3.10'
          - '3.11'
        pytorch-version:
          - 2.0.1
          - 2.1.2
          - 2.2.2
          - 2.3.1
          - 2.4.0
        use-conda:
          - false
      max-parallel: 20
